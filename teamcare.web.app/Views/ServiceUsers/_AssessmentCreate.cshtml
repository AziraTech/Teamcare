@using teamcare.common.Helpers
@model teamcare.web.app.ViewModels.SkillAssessmentViewModel

<div class="card-body p-9">
    <div class="py-3 py-md-1 mb-5">
        @if (Model.IsDueAssessment)
        {

            <i class="las la-user-clock" style="font-size:38px;" title="Assessment is due."></i>
        }
        <a href="#" class="btn btn-primary float-end" data-bs-toggle="modal" data-bs-target="#create_assessment" id="btncreate">Create</a>
    </div>

    <table class="table align-middle table-row-dashed gy-5" id="kt_table_customers_payment">
        <!--begin::Table head-->
        <thead class="border-bottom border-gray-200 fs-7 fw-bolder">
            <!--begin::Table row-->
            <tr class="text-start text-muted text-uppercase gs-0">
                <th class="min-w-100px">
                    Assessment Date
                </th>
                <th>
                    Assessed By
                </th>
                <th>Action</th>
            </tr>
            <!--end::Table row-->
        </thead>
        <!--end::Table head-->
        <!--begin::Table body-->
        <tbody class="fs-6 fw-bold text-gray-600">
            <!--begin::Table row-->
            @foreach (var item in Model.AssessmentList)
            {
                <tr>
                    <!--begin::Invoice=-->
                    <td>
                        @item.CreatedOn.ToString("dd MMMM yyyy, hh:mm")
                    </td>
                    <!--end::Invoice=-->
                    <!--begin::Status=-->
                    <td>
                        @item.CreatedByUser.Title @item.CreatedByUser.FirstName @item.CreatedByUser.LastName
                    </td>
                    <!--end::Status=-->
                    <!--begin::Amount=-->
                    <td>
                        <a href="javascript:void(0);" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm" title="View Data" onclick="assessmentDetails(this)" id="@item.Id" type="@((Int16)item.AssessmentType)" srvuserid="@item.ServiceUserId">
                            <!--begin::Svg Icon | path: icons/duotone/Communication/Write.svg-->
                            <span class="svg-icon svg-icon-3">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye" viewBox="0 0 16 16">
                                    <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z" />
                                    <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z" />
                                </svg>
                            </span>
                            <!--end::Svg Icon-->
                        </a>
                    </td>
                    <!--end::Amount=-->
                </tr>
            }

            <!--end::Table row-->

        </tbody>
        <!--end::Table body-->
    </table>

</div>

<div class="modal fade" id="create_assessment" tabindex="-1" aria-hidden="true">
    <!--begin::Modal dialog-->
    <input type="hidden" id="hdnserviceuserid" value="@Model.ServiceUserId" />
    <input type="hidden" id="hdnassessmenttype" value="@Model.AssessmentTypeId" />
    <div class="modal-dialog modal-dialog-centered mw-xl-1000px">
        <!--begin::Modal content-->
        <div class="modal-content">
            <!--begin::Modal header-->
            <div class="modal-header">
                <!--begin::Modal title-->
                <h2>Create Users Assessment</h2>
                <!--end::Modal title-->
                <!--begin::Close-->
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
                    <!--begin::Svg Icon | path: icons/duotone/Navigation/Close.svg-->
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g transform="translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)" fill="#000000">
                                <rect fill="#000000" x="0" y="7" width="16" height="2" rx="1" />
                                <rect fill="#000000" opacity="0.5" transform="translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)" x="0" y="7" width="16" height="2" rx="1" />
                            </g>
                        </svg>
                    </span>
                    <!--end::Svg Icon-->
                </div>
                <!--end::Close-->
            </div>
            <!--end::Modal header-->
            <!--begin::Modal body-->
            <div class="modal-body flex-row-fluid scroll-y py-lg-10 px-lg-10">
                <div class="mh-500px scroll-y me-n7 pe-7">
                    <div class="table-responsive">
                        <table class="table table-row-dashed border-gray-300 align-middle gy-6" id="assessmentTbl">
                            @*<thead class="border-gray-200 fs-5 fw-bold bg-lighten">
                                    <tr>
                                        <th>Group / Skill</th>
                                        <th>Level</th>
                                    </tr>
                                </thead>*@
                            <tbody class="fs-6">

                                @foreach (var item in Model.SkillGroups)
                                {
                                    if (Model.LivingSkills.Where(r => r.GroupId == item.Id).ToList().Count > 0)
                                    {
                                        <tr>
                                            <td colspan="2" style="padding-top: 0.7rem; padding-bottom: 0.7rem;">
                                                <label class="fw-bold fs-6">
                                                    @item.GroupName
                                                </label>
                                            </td>
                                        </tr>

                                        @foreach (var livingitem in Model.LivingSkills.Where(r => r.GroupId == item.Id).OrderBy(r => r.Position).ToList())
                                        {

                                            <tr>

                                                <td style="padding-top: 0.7rem; padding-bottom: 0.7rem;">
                                                    <label class="fs-7 text-muted" lid="@livingitem.Id">
                                                        @livingitem.SkillName
                                                    </label>
                                                </td>

                                                <td style="padding-top: 0.7rem; padding-bottom: 0.7rem;">
                                                    <div class="d-flex align-items-center">

                                                        @if (Model.AssessmentTypeId == 3)
                                                        {
                                                            var level = Model.AssessmentSkill.Where(x => x.SkillId == livingitem.Id).OrderByDescending(x => x.CreatedOn).FirstOrDefault()?.RiskLevel;

                                                            @foreach (var ritem in Model.RiskAssessment)
                                                            {

                                                                <label class="form-check form-check-custom form-check-solid me-10" title="@ritem.Text">
                                                                    <input class="form-check-input" type="radio" @(level != null && (int)level == ritem.Value ? "checked" : "") name="@livingitem.Id" grpname="@item.GroupName" skillname="@livingitem.SkillName" skillid="@livingitem.Id" risklevelid="@ritem.Value">
                                                                    <span class="form-check-label fw-bold">@ritem.Text</span>
                                                                </label>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            @foreach (var asset in Model.Assessment)
                                                            {
                                                                var level = Model.AssessmentSkill.Where(x => x.SkillId == livingitem.Id).OrderByDescending(x => x.CreatedOn).FirstOrDefault()?.SkillLevel;

                                                                var assessetname = @asset.Text.Split('(');
                                                                <label class="form-check form-check-custom form-check-solid me-10" title="@asset.Text">
                                                                    <input class="form-check-input" type="radio" @(level != null && (int)level == asset.Value ? "checked" : "") name="@livingitem.Id" levelid="@asset.Value" grpname="@item.GroupName" skillname="@livingitem.SkillName" skillid="@livingitem.Id">
                                                                    <span class="form-check-label fw-bold">@assessetname[1].Replace(")", "")</span>
                                                                </label>
                                                            }
                                                        }

                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }

                            </tbody>
                        </table>

                    </div>
                </div>

                <div class="d-flex flex-stack pt-10">
                    <div class="me-2">
                        <button type="button" class="btn btn-lg btn-light-primary me-3" data-bs-dismiss="modal">
                            Cancel
                        </button>
                    </div>
                    <div>
                        <button type="submit" id="new_assessment_submit" class="btn btn-primary">
                            <span class="indicator-label">
                                Submit
                                <span class="svg-icon svg-icon-3 ms-2 me-0">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                            <polygon points="0 0 24 0 24 24 0 24" />
                                            <rect fill="#000000" opacity="0.5" transform="translate(8.500000, 12.000000) rotate(-90.000000) translate(-8.500000, -12.000000)" x="7.5" y="7.5" width="2" height="9" rx="1" />
                                            <path d="M9.70710318,15.7071045 C9.31657888,16.0976288 8.68341391,16.0976288 8.29288961,15.7071045 C7.90236532,15.3165802 7.90236532,14.6834152 8.29288961,14.2928909 L14.2928896,8.29289093 C14.6714686,7.914312 15.281055,7.90106637 15.675721,8.26284357 L21.675721,13.7628436 C22.08284,14.136036 22.1103429,14.7686034 21.7371505,15.1757223 C21.3639581,15.5828413 20.7313908,15.6103443 20.3242718,15.2371519 L15.0300721,10.3841355 L9.70710318,15.7071045 Z" fill="#000000" fill-rule="nonzero" transform="translate(14.999999, 11.999997) scale(1, -1) rotate(90.000000) translate(-14.999999, -11.999997)" />
                                        </g>
                                    </svg>
                                </span>
                            </span>
                            <span class="indicator-progress">
                                Please wait...
                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>
                </div>
            </div>
            <!--end::Modal body-->
        </div>
        <!--end::Modal content-->
    </div>
    <!--end::Modal dialog-->
</div>


<div class="modal fade" id="assessment_details" tabindex="-1" aria-hidden="true">
    <!--begin::Modal dialog-->
    <div class="modal-dialog modal-dialog-centered mw-xl-1000px">
        <!--begin::Modal content-->
        <div class="modal-content">
            <!--begin::Modal header-->
            <div class="modal-header">
                <!--begin::Modal title-->
                <h2>Assessment Details</h2>
                <!--end::Modal title-->
                <!--begin::Close-->
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
                    <!--begin::Svg Icon | path: icons/duotone/Navigation/Close.svg-->
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g transform="translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)" fill="#000000">
                                <rect fill="#000000" x="0" y="7" width="16" height="2" rx="1" />
                                <rect fill="#000000" opacity="0.5" transform="translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)" x="0" y="7" width="16" height="2" rx="1" />
                            </g>
                        </svg>
                    </span>
                    <!--end::Svg Icon-->
                </div>
                <!--end::Close-->
            </div>
            <!--end::Modal header-->
            <!--begin::Modal body-->
            <div class="modal-body scroll-y py-lg-10 px-lg-10">
                <div class="mh-500px scroll-y me-n7 pe-7">
                    <div class="table-responsive" id="AssessmentDetailsContent">

                    </div>
                </div>
            </div>
            <!--end::Modal body-->
        </div>
        <!--end::Modal content-->
    </div>
    <!--end::Modal dialog-->
</div>